@using Microsoft.AspNetCore.Authentication
@inject IWebHostEnvironment Env

@{
    ViewData["Title"] = "Home Page";
}

<div class="container mt-3">
    @if (Env.IsDevelopment())
    {
        <div class="alert alert-info">
            <strong>[Dev Mode]</strong> This block only shows in Development.
        </div>

        @if (User.Identity!.IsAuthenticated)
        {
            var authenticationResult = await Context.AuthenticateAsync();
            var issued = authenticationResult.Properties!.Items[".issued"];
            var expires = authenticationResult.Properties.Items[".expires"];
            <div>
                <p>You are signed in as</p>
                <h2>@User.Identity.Name</h2>
                <dl>
                    <dt>Issued</dt>
                    <dd>@issued</dd>
                    <dt>Expires</dt>
                    <dd>@expires</dd>
                </dl>
                <p><a class="btn btn-dark" href="javascript:void(0);" onclick="showLogoutModal()">Sign out</a></p>
            </div>
        }

        @if (!User.Identity.IsAuthenticated)
        {
            <div>
                <p>You are not signed in</p>
                <p><a class="btn btn-sm btn-dark" asp-controller="Account" asp-action="Login">Sign in</a></p>
            </div>
        }
    }
</div>
